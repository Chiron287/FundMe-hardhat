{
  "address": "0x64001228C75302975095Fb771877266d44B6df03",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__CallFail",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__ToFewEther",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xcec333d839142ce75569880ec8b2b802c143c4f9c9bd5a814c383002dabbe4af",
  "receipt": {
    "to": null,
    "from": "0x5e2cFC643C31C77Bfd5E25700e1f6324f022aA3f",
    "contractAddress": "0x64001228C75302975095Fb771877266d44B6df03",
    "transactionIndex": 11,
    "gasUsed": "842325",
    "logsBloom": "0x
    "blockHash": "0xb1d36b21408e688cf906a0ee126611a8845cfad2f0443252d192a131375cb41a",
    "transactionHash": "0xcec333d839142ce75569880ec8b2b802c143c4f9c9bd5a814c383002dabbe4af",
    "logs": [],
    "blockNumber": 3859003,
    "cumulativeGasUsed": "7866828",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "8915845a0cd50054452c953f65f234cf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__CallFail\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__ToFewEther\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A sample Funding Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is for creating a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\nerror FundMe__CallFail();\\nerror FundMe__ToFewEther();\\n\\n\\n/**@title A sample Funding Contract\\n * @notice This contract is for creating a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n\\n    address public immutable i_owner;\\n    uint256 private constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    AggregatorV3Interface public s_priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        if(msg.value.getConversionRate(s_priceFeed) < MINIMUM_USD) revert FundMe__ToFewEther();\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        address[] memory m_funders = s_funders;\\n        for (uint256 funderIndex=0; funderIndex < m_funders.length; funderIndex++){\\n            s_addressToAmountFunded[m_funders[funderIndex]] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        if(!callSuccess) revert FundMe__CallFail();\\n    }\\n\\n    function getBalance() public view returns(uint256){\\n        return address(this).balance;\\n    }\\n    \\n    modifier onlyOwner {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\",\"keccak256\":\"0x24106bdab5017b9da5ea329d68018c991ec648f4222914be90c1bc6fbff04c95\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0xad3b1d6f7d7ac667873c18cb3f44b64fec4be2ec776ce5e581f4083179648275\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f3d380380610f3d83398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610dd86101656000396000818161031d01526105f10152610dd86000f3fe6080604052600436106100745760003560e01c80633ccfd60b1161004e5780633ccfd60b1461011b57806354861af714610132578063b60d42881461016f578063dba6335f1461017957610083565b80630ec3b0271461008857806312065fe0146100b35780631bf6132d146100de57610083565b36610083576100816101a4565b005b600080fd5b34801561009457600080fd5b5061009d6102d5565b6040516100aa9190610815565b60405180910390f35b3480156100bf57600080fd5b506100c86102fb565b6040516100d59190610849565b60405180910390f35b3480156100ea57600080fd5b50610105600480360381019061010091906108a7565b610303565b6040516101129190610849565b60405180910390f35b34801561012757600080fd5b5061013061031b565b005b34801561013e57600080fd5b5061015960048036038101906101549190610900565b6105b0565b604051610166919061093c565b60405180910390f35b6101776101a4565b005b34801561018557600080fd5b5061018e6105ef565b60405161019b919061093c565b60405180910390f35b6802b5e3af16b18800006101e3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061390919063ffffffff16565b101561021b576040517f994ed2f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102699190610986565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600047905090565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561042457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103da575b5050505050905060005b81518110156104a857600080600084848151811061044f5761044e6109dc565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806104a090610a0b565b91505061042e565b50600067ffffffffffffffff8111156104c4576104c3610a54565b5b6040519080825280602002602001820160405280156104f25781602001602082028036833780820191505090505b50600190805190602001906105089291906106ef565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052f90610ab4565b60006040518083038185875af1925050503d806000811461056c576040519150601f19603f3d011682016040523d82523d6000602084013e610571565b606091505b50509050806105ac576040517f507766e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b600181815481106105c057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061061f8361064f565b90506000670de0b6b3a764000085836106389190610ac9565b6106429190610b52565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561069857600080fd5b505afa1580156106ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d09190610c10565b5050509150506402540be400816106e79190610c8b565b915050919050565b828054828255906000526020600020908101928215610768579160200282015b828111156107675782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061070f565b5b5090506107759190610779565b5090565b5b8082111561079257600081600090555060010161077a565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107db6107d66107d184610796565b6107b6565b610796565b9050919050565b60006107ed826107c0565b9050919050565b60006107ff826107e2565b9050919050565b61080f816107f4565b82525050565b600060208201905061082a6000830184610806565b92915050565b6000819050919050565b61084381610830565b82525050565b600060208201905061085e600083018461083a565b92915050565b600080fd5b600061087482610796565b9050919050565b61088481610869565b811461088f57600080fd5b50565b6000813590506108a18161087b565b92915050565b6000602082840312156108bd576108bc610864565b5b60006108cb84828501610892565b91505092915050565b6108dd81610830565b81146108e857600080fd5b50565b6000813590506108fa816108d4565b92915050565b60006020828403121561091657610915610864565b5b6000610924848285016108eb565b91505092915050565b61093681610869565b82525050565b6000602082019050610951600083018461092d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061099182610830565b915061099c83610830565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109d1576109d0610957565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a1682610830565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a4957610a48610957565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a9e600083610a83565b9150610aa982610a8e565b600082019050919050565b6000610abf82610a91565b9150819050919050565b6000610ad482610830565b9150610adf83610830565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b1857610b17610957565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b5d82610830565b9150610b6883610830565b925082610b7857610b77610b23565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ba281610b83565b8114610bad57600080fd5b50565b600081519050610bbf81610b99565b92915050565b6000819050919050565b610bd881610bc5565b8114610be357600080fd5b50565b600081519050610bf581610bcf565b92915050565b600081519050610c0a816108d4565b92915050565b600080600080600060a08688031215610c2c57610c2b610864565b5b6000610c3a88828901610bb0565b9550506020610c4b88828901610be6565b9450506040610c5c88828901610bfb565b9350506060610c6d88828901610bfb565b9250506080610c7e88828901610bb0565b9150509295509295909350565b6000610c9682610bc5565b9150610ca183610bc5565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ce057610cdf610957565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d1d57610d1c610957565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d5a57610d59610957565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d9757610d96610957565b5b82820290509291505056fea264697066735822122003b080b39d7c782af9a6f226dbba64557d9e41c4d4c218f0ac83a8894df2a04264736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80633ccfd60b1161004e5780633ccfd60b1461011b57806354861af714610132578063b60d42881461016f578063dba6335f1461017957610083565b80630ec3b0271461008857806312065fe0146100b35780631bf6132d146100de57610083565b36610083576100816101a4565b005b600080fd5b34801561009457600080fd5b5061009d6102d5565b6040516100aa9190610815565b60405180910390f35b3480156100bf57600080fd5b506100c86102fb565b6040516100d59190610849565b60405180910390f35b3480156100ea57600080fd5b50610105600480360381019061010091906108a7565b610303565b6040516101129190610849565b60405180910390f35b34801561012757600080fd5b5061013061031b565b005b34801561013e57600080fd5b5061015960048036038101906101549190610900565b6105b0565b604051610166919061093c565b60405180910390f35b6101776101a4565b005b34801561018557600080fd5b5061018e6105ef565b60405161019b919061093c565b60405180910390f35b6802b5e3af16b18800006101e3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061390919063ffffffff16565b101561021b576040517f994ed2f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102699190610986565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600047905090565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561042457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103da575b5050505050905060005b81518110156104a857600080600084848151811061044f5761044e6109dc565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806104a090610a0b565b91505061042e565b50600067ffffffffffffffff8111156104c4576104c3610a54565b5b6040519080825280602002602001820160405280156104f25781602001602082028036833780820191505090505b50600190805190602001906105089291906106ef565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052f90610ab4565b60006040518083038185875af1925050503d806000811461056c576040519150601f19603f3d011682016040523d82523d6000602084013e610571565b606091505b50509050806105ac576040517f507766e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b600181815481106105c057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061061f8361064f565b90506000670de0b6b3a764000085836106389190610ac9565b6106429190610b52565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561069857600080fd5b505afa1580156106ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d09190610c10565b5050509150506402540be400816106e79190610c8b565b915050919050565b828054828255906000526020600020908101928215610768579160200282015b828111156107675782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061070f565b5b5090506107759190610779565b5090565b5b8082111561079257600081600090555060010161077a565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107db6107d66107d184610796565b6107b6565b610796565b9050919050565b60006107ed826107c0565b9050919050565b60006107ff826107e2565b9050919050565b61080f816107f4565b82525050565b600060208201905061082a6000830184610806565b92915050565b6000819050919050565b61084381610830565b82525050565b600060208201905061085e600083018461083a565b92915050565b600080fd5b600061087482610796565b9050919050565b61088481610869565b811461088f57600080fd5b50565b6000813590506108a18161087b565b92915050565b6000602082840312156108bd576108bc610864565b5b60006108cb84828501610892565b91505092915050565b6108dd81610830565b81146108e857600080fd5b50565b6000813590506108fa816108d4565b92915050565b60006020828403121561091657610915610864565b5b6000610924848285016108eb565b91505092915050565b61093681610869565b82525050565b6000602082019050610951600083018461092d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061099182610830565b915061099c83610830565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109d1576109d0610957565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a1682610830565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a4957610a48610957565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a9e600083610a83565b9150610aa982610a8e565b600082019050919050565b6000610abf82610a91565b9150819050919050565b6000610ad482610830565b9150610adf83610830565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b1857610b17610957565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b5d82610830565b9150610b6883610830565b925082610b7857610b77610b23565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ba281610b83565b8114610bad57600080fd5b50565b600081519050610bbf81610b99565b92915050565b6000819050919050565b610bd881610bc5565b8114610be357600080fd5b50565b600081519050610bf581610bcf565b92915050565b600081519050610c0a816108d4565b92915050565b600080600080600060a08688031215610c2c57610c2b610864565b5b6000610c3a88828901610bb0565b9550506020610c4b88828901610be6565b9450506040610c5c88828901610bfb565b9350506060610c6d88828901610bfb565b9250506080610c7e88828901610bb0565b9150509295509295909350565b6000610c9682610bc5565b9150610ca183610bc5565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ce057610cdf610957565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d1d57610d1c610957565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d5a57610d59610957565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d9757610d96610957565b5b82820290509291505056fea264697066735822122003b080b39d7c782af9a6f226dbba64557d9e41c4d4c218f0ac83a8894df2a04264736f6c63430008080033",
  "devdoc": {
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A sample Funding Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is for creating a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 77,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}